# ==============================================================================
# TAPIRS
# A reproducible metabarcoding workflow using snakemake
# ==============================================================================

configfile: "config/config.yaml"

# ------------------------------------------------------------------------------
# LIBRARY AND SAMPLE INFORMATION
# ------------------------------------------------------------------------------

import pandas as pd

libraries_df = pd.read_table(config['samples'], header = None)  # Pull in libraries and samples from tsv

# Generate library wildcards
LIBRARIES = list(libraries_df[0])  # create list from column of dataframe
LIBRARIES = list(dict.fromkeys(LIBRARIES))  # dipping it into a dictionary to remove duplicates

# Generate samples wildcards
SAMPLES = list(libraries_df[1])  # create list from column of dataframe
SAMPLES = list(dict.fromkeys(SAMPLES))  # dipping into a dictionary to remove duplicates

# Generate list of legitimate combinations
with open(config['samples']) as infile:
    real_combos = []
    for line in infile:
        real_combos.append(line.strip().replace('\t', '/'))


# ------------------------------------------------------------------------------
# INCLUDED RULE FILES
# use config/config.yaml to configure
# ------------------------------------------------------------------------------

include: "rules/qc.smk"
include: "rules/lca.smk"
include: "rules/vsearch.smk"

if config["blast_analysis"] == "TRUE":
    include: "rules/blast.smk"

if config["kraken_analysis"] == "TRUE":
    include: "rules/kraken2.smk"